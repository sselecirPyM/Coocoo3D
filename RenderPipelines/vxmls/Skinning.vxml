<?xml version="1.0" encoding="utf-8" ?>
<root name="SkinningCompute" xmlns:v="directive" xmlns:b="binding">
	<render name="Execute" parameter="Mesh mesh">
		<shader source="shader_skinning"/>
		<script>
			context.SetUAV(0, mesh, "POSITION0");
			context.SetUAV(1, mesh, "NORMAL0");
			context.SetUAV(2, mesh, "TANGENT0");
			context.SetSRV(1, mesh, "BONES0");
			context.SetSRV(2, mesh, "WEIGHTS0");
		</script>
		<dispatch x="(mesh.GetVertexCount() + 63) / 64"/>
	</render>
	
	<hlsl name="shader_skinning" compute="csmain">
		<srv name="_matrice" type="StructuredBuffer&lt;float4x4&gt;" xType="Matrix4x4[]"/>
		<srv name="_boneIndice" type="StructuredBuffer&lt;uint2&gt;" xType="" autoBinding="false"/>
		<srv name="_boneWeight" type="StructuredBuffer&lt;float4&gt;" xType="" autoBinding="false"/>
		<uav name="_position" type="RWStructuredBuffer&lt;float3&gt;" xType="" autoBinding="false"/>
		<uav name="_normal" type="RWStructuredBuffer&lt;float3&gt;" xType="" autoBinding="false"/>
		<uav name="_tangent" type="RWStructuredBuffer&lt;float4&gt;" xType="" autoBinding="false"/>
		<code>
			<![CDATA[
#define MAX_BONE_MATRICES 1024
[numthreads(64, 1, 1)]
void csmain(uint3 dtid : SV_DispatchThreadID)
{
	uint id = dtid.x;
	uint width;
	uint stride;
	_position.GetDimensions(width, stride);
	if(id >= width)
	{
		return;
	}
	uint boneI[4];
	boneI[0] = _boneIndice[id].x & 0xFFFF;
	boneI[1] = (_boneIndice[id].x >> 16) & 0xFFFF;
	boneI[2] = _boneIndice[id].y & 0xFFFF;
	boneI[3] = (_boneIndice[id].y >> 16) & 0xFFFF;
	
	matrix mx = {
		0,0,0,0,
		0,0,0,0,
		0,0,0,0,
		0,0,0,0 };
	for (int i = 0; i < 4; i++)
	{
		uint iBone = iBone = boneI[i];
		float fWeight = _boneWeight[id][i];
		if (iBone < MAX_BONE_MATRICES)
		{
			mx += fWeight * _matrice[iBone];
		}
	}

	float3 position = _position[id];
	float3 normal = _normal[id];
	float4 tangent = _tangent[id];
	_position[id] = mul(float4(position, 1), mx).xyz;
	_normal[id] = mul(float4(normal, 0), mx).xyz;
	_tangent[id] = float4(mul(float4(tangent.xyz, 0), mx).xyz, tangent.w);
}
			]]>
		</code>
	</hlsl>
</root>